<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>hi, I'm Bailing Lan Blog</title>
        <link>https://miraling.github.io/website/en/blog</link>
        <description>hi, I'm Bailing Lan Blog</description>
        <lastBuildDate>Wed, 15 Feb 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[敏捷框架Scrum]]></title>
            <link>https://miraling.github.io/website/en/blog/what-is-Scrum</link>
            <guid>https://miraling.github.io/website/en/blog/what-is-Scrum</guid>
            <pubDate>Wed, 15 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[相对于传统的瀑布式、迭代式等“非敏捷”的开发模式，敏捷软件开发(Agile software development)更强调以下几点]]></description>
            <content:encoded><![CDATA[<p>相对于传统的瀑布式、迭代式等“非敏捷”的开发模式，敏捷软件开发(Agile software development)更强调以下几点</p><ul><li>开发团队与业务专家之间的紧密协作</li><li>开发与业务团队高效的面对面的沟通</li><li>形成紧凑而自我组织型的团队</li><li>更注重软件开发过程中人的作用</li></ul><p>从而获得如下益处：</p><ul><li>能频繁交付新的软件版本</li><li>能适应需求的变化</li></ul><h1>介绍</h1><p>Scrum的流程大致如下：</p><p><img loading="lazy" src="https://scrumorg-website-prod.s3.amazonaws.com/drupal/inline-images/2021-01/screen_shot_2021-01-10_at_9.14.17_am.png" alt="Scrum Framework" class="img_ev3q"></p><p>图中展示了Scrum的流程，其中包括Events和Artifacts两大类，前者是活动，后者可以理解为“工件”。</p><h1>Scrum Events</h1><p>Scrum Events形成规律性的活动，并尽量减少其他会议；</p><ul><li>Sprint：一个月或更短的周期，在此期间完成工作；Sprint包含所有其他Scrum Events；新的Sprint在前一个Sprint结束后立即开始。</li><li>Sprint Planning：专门用于规划Sprint期间的工作的活动。</li><li>Daily Scrum：每天举行的活动，开发人员检查实现Sprint目标的进展情况，发现可能阻碍他们工作的因素，并作出相应调整。</li><li>Sprint Revie：在Sprint结束时举行的活动，Scrum团队和关键stakeholders回顾在Sprint中完成了什么，在他们的环境中发生了什么变化；接下来，与会者合作讨论下一步该做什么。</li><li>Sprint Retrospective：Scrum 团队在此活动中聚在一起讨论上一个 Sprint 的进展情况，并确定一些有利于提高效率的改变。</li></ul><h1>Scrum Artifacts</h1><p>透明且可检查的计划和工作，以便将来进行调整；每个工件都有自己的承诺(Commitment)，这有助于团队了解他们是否正在取得进展；</p><ul><li>Product Backlog：一个不断发展的、有序的、用于改进产品所需的清单；它是Scrum团队开展工作的唯一来源。<blockquote><p>Commitment:&nbsp;Product Goal&nbsp;- &nbsp;团队计划的目标</p></blockquote></li><li>Sprint Backlog：一个高度可见的工作清单，它是开发人员的 Sprint 计划，可能会随着他们的学习而不断变化<blockquote><p>Commitment:&nbsp;Sprint Goal&nbsp;- &nbsp;Sprint 的单一目标</p></blockquote></li><li>Increments：小块的工作，作为实现产品目标的具体垫脚石。在Sprint期间，你可以根据需要随时交付，而不限于每个Sprint只有一个版本。(ps：通常一个increment 可能包含几个user story，但一个user story不会包含多个increment)<blockquote><p>Commitment:&nbsp;Definition of Done&nbsp;- &nbsp;描述一个increment怎样才被视为完成</p></blockquote></li></ul><h1>总结</h1><p>Scrum是一个<strong>经验性</strong>的过程，决策是基于观察、经验和实验的。Scrum有三个支柱：透明度、检查和适应。这支持了<strong>迭代工作</strong>的概念。经验主义可以说是：是通过小的尝试进行工作，从工作中学习，并根据需求调整你正在做的事情和工作方式。</p><p><img loading="lazy" src="https://s3.amazonaws.com/static.scrum.org/web/Scrum+Values.png" alt="Scrum&nbsp;has three pillars" class="img_ev3q"></p><p>Scrum团队的关键特征是<strong>信任</strong>。如果信任在Scrum团队中不存在，那么在完成工作的过程中可能会出现紧张和瓶颈。
Scrum价值观包括勇气、专注、承诺、尊重和开放，在上面的图片中可以看到。Scrum价值观对于Scrum团队来说也是至关重要的，因为它们指导了如何开展工作和推动信任。</p><p>总的来说，Scrum需要做到以下三点：</p><ul><li><strong>有价值的工作的增量(Increments&nbsp;of valuable work)</strong> 在一个月或更短的短周期内交付，这称为<strong>Sprints</strong>。在 Sprint 期间会有持续的feedback出现，使得我们可以对工作进程和要交付的东西进行<strong>inspection</strong>和<strong>adaptation</strong>。</li><li>Scrum 团队有一名<strong>Scrum Master</strong>、一名<strong>Product Owner</strong>和一些<strong>Developers</strong>，他们负责在 Sprint 期间将工作的选择转化为价值增量(Increment of value)。</li><li>Scrum 团队及其组织、以及来自业务、用户和客户群体的成员（称为<strong>stakeholders</strong>）检查 Sprint 的结果并为下一个 Sprint 进行调整。</li></ul><h1>附：什么是<strong>Increments&nbsp;of value</strong></h1><p>当涉及到大型的、复杂的组织时，组织、团队、内部用户和外部客户的不同需求使得了价值的定义模糊不清。这就是PO和BAs的作用所在——他们通过对不同需求的理解，将工作分解成小的价值增量increments&nbsp;of value，从而带来清晰的认识。</p><p>这有助于团队做计划、确定优先级和快速交付。</p><p>在评估每个product, feature, or backlog item时，PO和BA在定义increments&nbsp;of value时应该考虑三件事。</p><ul><li>第一，与客户需求保持一致。PO和BA要确保每个增量都能为用户提供价值，并满足客户的关键需求。一些好的分析问题包括如下内容：它是否为<strong>终端用户</strong>提供了价值？它是否满足了一个还是多个<strong>用户需求</strong>？它与任何其他的用户需求有<strong>冲突</strong>吗？这些问题帮助我们从用户视角考虑问题，而不仅仅是从技术层面。</li><li>第二，与愿景和战略(vision and strategy)保持一致。PO和BA要确保每个增量都有助于达成战略和产品愿景。一些好的分析问题包括如下内容。这个backlog item是如何提供价值的？这个解决方案是否会改变产品的愿景？这个功能是否支持组织战略，但与用户的需求有冲突？这些问题有助于确保与大局相一致。</li><li>最后，最大限度地减少没完成的工作。PO和BA的很大一部分作用是除去那些不能提供价值的工作。分析每一个product feature和backlog item，以确定每个组件都能提供切实的价值，剔除那些没有价值的部分。</li></ul>]]></content:encoded>
            <category>Agile</category>
        </item>
        <item>
            <title><![CDATA[Next.js中的预渲染]]></title>
            <link>https://miraling.github.io/website/en/blog/pre-rendering-in-Nextjs</link>
            <guid>https://miraling.github.io/website/en/blog/pre-rendering-in-Nextjs</guid>
            <pubDate>Sun, 12 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[在默认情况下，Next.js 会预渲染每个页面。这意味着 Next.js 会提前为每个页面生成 HTML，而不是全部由客户端 JavaScript 完成。预渲染可以带来更好的性能和SEO（Search engine optimization，搜索引擎优化）。]]></description>
            <content:encoded><![CDATA[<p>在默认情况下，Next.js 会预渲染每个页面。这意味着 Next.js 会提前为每个页面生成 HTML，而不是全部由客户端 JavaScript 完成。预渲染可以带来更好的性能和SEO（Search engine optimization，搜索引擎优化）。</p><p>每个生成的 HTML 都与该页面所需的最少 JavaScript 代码相关。当浏览器加载页面时，其 JavaScript 代码将运行并使页面完全交互。（这个过程称为<strong>hydration</strong>，<strong>水合作用</strong>。）</p><p>Next.js的预渲染分为两种形式：<a href="https://nextjs.org/docs/basic-features/pages#static-generation-recommended" target="_blank" rel="noopener noreferrer">Static Generation</a>和<a href="https://nextjs.org/docs/basic-features/pages#server-side-rendering" target="_blank" rel="noopener noreferrer">Server-side Rendering</a>。其中，
Static Generation 又分为&nbsp;<a href="https://nextjs.org/docs/basic-features/pages#static-generation-with-data" target="_blank" rel="noopener noreferrer">with data</a>, 和&nbsp;<a href="https://nextjs.org/docs/basic-features/pages#static-generation-without-data" target="_blank" rel="noopener noreferrer">without data</a> 两种情况。接下来我会分别讲讲每一种情况。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="static-generation和-server-side-rendering">Static Generation和 Server-side Rendering<a href="#static-generation和-server-side-rendering" class="hash-link" aria-label="Direct link to Static Generation和 Server-side Rendering" title="Direct link to Static Generation和 Server-side Rendering">​</a></h2><p>Next.js 有两种pre-rendering形式，Static Generation和 Server-side Rendering，以下是官方的解释：</p><ul><li><a href="https://nextjs.org/docs/basic-features/pages#static-generation-recommended" target="_blank" rel="noopener noreferrer"><strong>Static Generation</strong></a>: generates the HTML at&nbsp;<strong>build time</strong>;</li><li><a href="https://nextjs.org/docs/basic-features/pages#server-side-rendering" target="_blank" rel="noopener noreferrer"><strong>Server-side Rendering</strong></a>: generates the HTML on&nbsp;<strong>each request</strong>;</li></ul><blockquote><p><em>开发模式</em>下（运行<code>npm run dev</code>或<code>yarn dev</code>时），页面在每次request的时候预渲染。 这也适用于静态生成，使其更易于开发。
<em>投入生产</em>时，静态生成将在构建时发生一次，而<strong>不是</strong>在每次请求时发生。</p><p>我们可以分别为每个page设置pre-rendering形式</p></blockquote><blockquote><p>你应该问问自己：“我可以在用户请求之前<strong>预渲染</strong>此页面吗？”&nbsp;如果答案是肯定的，那么你应该选择<a href="https://nextjs.org/docs/basic-features/pages#static-generation-recommended" target="_blank" rel="noopener noreferrer">Static Generation</a>。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="static-generation">Static Generation<a href="#static-generation" class="hash-link" aria-label="Direct link to Static Generation" title="Direct link to Static Generation">​</a></h2><p><a href="https://nextjs.org/docs/basic-features/pages#static-generation-recommended" target="_blank" rel="noopener noreferrer">Static Generation</a>&nbsp;can be done with and without data.
静态生成有以下两种<code>pre-rendering</code>方式：</p><ul><li><strong>build时</strong>请求外部data；</li><li><strong>build时不需要</strong>请求外部data，但在用户端需要请求data，比如用户dashboard，其渲染的data是根据用户高度差异化的，并且有时效性要求，无法在build时准备好所有data，所以在build时不请求data，在客户端请求对应的data；</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="static-generation-with-data">Static Generation with data<a href="#static-generation-with-data" class="hash-link" aria-label="Direct link to Static Generation with data" title="Direct link to Static Generation with data">​</a></h3><p>对于某些页面，如果不首先获取一些外部数据，可能无法呈现 HTML。也许需要在构建时访问文件系统、获取外部 API 或查询数据库。Next.js开箱即用地支持这种情况——<a href="https://nextjs.org/docs/basic-features/pages#static-generation-with-data" target="_blank" rel="noopener noreferrer"><strong>带数据的静态生成</strong></a></p><p><img loading="lazy" src="https://nextjs.org/static/images/learn/data-fetching/static-generation-with-data.png" alt="Image about Static Generation with Data From Next.js Document" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="方法-getstaticprops">方法： <code>getStaticProps</code><a href="#方法-getstaticprops" class="hash-link" aria-label="Direct link to 方法-getstaticprops" title="Direct link to 方法-getstaticprops">​</a></h4><p>在 Next.js 中，导出页面组件时，你可以导出一个名为<code>getStaticProps</code> 的<code>async</code> function（异步函数）。</p><ul><li><a href="https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation" target="_blank" rel="noopener noreferrer"><code>getStaticProps</code></a>在生产中的 <em>构建</em> 时运行</li><li>在函数内部，可以获取外部数据并将其作为props发送到page。</li></ul><p>例如：</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">Home</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getStaticProps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Get external data from the file system, API, DB, etc.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// The value of the `props` key will be</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//  passed to the `Home` component</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">props</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这是一段官网解释：</p><blockquote><p>Essentially,&nbsp;<code>getStaticProps</code> allows you to tell Next.js:&nbsp;<em>“Hey, this page has some data dependencies — so when you pre-render this page at build time, make sure to resolve them first!”</em></p><p><strong>Note</strong>: In <strong>development mode</strong>,&nbsp;<code>getStaticProps</code> &nbsp;runs on each request instead.</p></blockquote><h4 class="anchor anchorWithStickyNavbar_LWe7" id="从api拿数据">从API拿数据<a href="#从api拿数据" class="hash-link" aria-label="Direct link to 从API拿数据" title="Direct link to 从API拿数据">​</a></h4><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getSortedPostsData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Instead of the file system,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// fetch post data from an external API endpoint</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'..'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="从数据库拿数据">从数据库拿数据<a href="#从数据库拿数据" class="hash-link" aria-label="Direct link to 从数据库拿数据" title="Direct link to 从数据库拿数据">​</a></h4><div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">someDatabaseSDK</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'someDatabaseSDK'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> databaseClient </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> someDatabaseSDK</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token spread operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getSortedPostsData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Instead of the file system,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// fetch post data from a database</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> databaseClient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">query</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'SELECT posts...'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><code>getStaticProps</code>只<strong>在服务器端运行</strong>。它永远不会在客户端运行。它甚至不会包含在浏览器的 JS 包中。这意味着你可以编写直接数据库查询等代码，而无需将它们发送到浏览器。</p></blockquote><blockquote><p>在<strong>开发</strong>（<code>npm run dev</code>或<code>yarn dev</code>）中，<a href="https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation" target="_blank" rel="noopener noreferrer"><code>getStaticProps</code></a>在 <em>每个请求（request）</em> 上运行。
在<strong>生产</strong>中，<code>getStaticProps</code>在 <em>构建时</em> 运行。但是，可以使用<code>getStaticPaths</code>返回的<a href="https://nextjs.org/docs/api-reference/data-fetching/get-static-paths#fallback-false" target="_blank" rel="noopener noreferrer"><code>fallback</code> key </a>来增强此行为</p></blockquote><blockquote><p><code>getStaticProps</code>只能从<a href="https://nextjs.org/docs/basic-features/pages" target="_blank" rel="noopener noreferrer"><strong>page</strong></a>导出。不能从non-page文件中导出它。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="static-generation-with-data-总结">Static Generation with data 总结<a href="#static-generation-with-data-总结" class="hash-link" aria-label="Direct link to Static Generation with data 总结" title="Direct link to Static Generation with data 总结">​</a></h3><p>由于<a href="https://nextjs.org/docs/basic-features/pages#static-generation-recommended" target="_blank" rel="noopener noreferrer">静态生成</a>在 <em>build</em> 时发生一次，因此它不适合频繁更新或根据每个用户请求更改的数据。</p><p>如果你的数据可能会发生变化，你可以使用<strong>服务器端渲染</strong>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="server-side-rendering-with-data">Server-side Rendering With Data<a href="#server-side-rendering-with-data" class="hash-link" aria-label="Direct link to Server-side Rendering With Data" title="Direct link to Server-side Rendering With Data">​</a></h2><p><img loading="lazy" src="https://nextjs.org/static/images/learn/data-fetching/server-side-rendering-with-data.png" class="img_ev3q"></p><p>为了使用&nbsp;<a href="https://nextjs.org/docs/basic-features/pages#server-side-rendering" target="_blank" rel="noopener noreferrer">Server-side Rendering</a> 你需要从页面导出&nbsp;<a href="https://nextjs.org/docs/basic-features/data-fetching#getserversideprops-server-side-rendering" target="_blank" rel="noopener noreferrer"><code>getServerSideProps</code></a> 方法&nbsp;而不是之前 提到的&nbsp;<a href="https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation" target="_blank" rel="noopener noreferrer"><code>getStaticProps</code></a>&nbsp;方法。</p><p>仅当你需要预渲染的数据<strong>必须</strong>在请求时获取，才应使用<code>getServerSideProps</code>。
这么做，用户接收到页面第一个字节所花费的时间time to first byte (<a href="https://web.dev/time-to-first-byte/" target="_blank" rel="noopener noreferrer">TTFB</a>) 会比&nbsp;<a href="https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation" target="_blank" rel="noopener noreferrer"><code>getStaticProps</code></a>&nbsp;长，因为服务器要计算每一个request的结果， 并且如果没有额外配置，&nbsp;<a href="https://vercel.com/docs/edge-network/overview" target="_blank" rel="noopener noreferrer">CDN</a>无法缓存结果。</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getServerSideProps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">props</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// props for your component</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>getServerSideProps</code>在请求时被调用，它的参数 (&nbsp;<code>context</code>) 包含请求特定的参数。</p><p>如果不需要预渲染data， <em>指仅预渲染page，可能由于data时效性要求很高，不需要预渲染data</em>，也可以使用<a href="https://nextjs.org/docs/basic-features/data-fetching#fetching-data-on-the-client-side" target="_blank" rel="noopener noreferrer"><strong>Client-side Rendering</strong></a> ，比如，在dashboard用户仪表板场景中，dashboard是私有的、特定于用户的页面，所以 SEO不相关，且不需要在服务器端预渲染（不知道用户信息，预渲染无意义）；数据更新频繁，需要请求时取数据。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="client-side-rendering">Client-side Rendering<a href="#client-side-rendering" class="hash-link" aria-label="Direct link to Client-side Rendering" title="Direct link to Client-side Rendering">​</a></h2><ul><li>静态生成（预渲染）页面时，不需要外部数据。</li><li>当页面加载时，才使用 JavaScript 从客户端获取外部数据并填充其余部</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="适用场景">适用场景<a href="#适用场景" class="hash-link" aria-label="Direct link to 适用场景" title="Direct link to 适用场景">​</a></h3><p>与 SEO 无关的私人的、用户特定的页面</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="适应场景举例">适应场景举例<a href="#适应场景举例" class="hash-link" aria-label="Direct link to 适应场景举例" title="Direct link to 适应场景举例">​</a></h3><p>  比如，在dashboard用户仪表板场景中，dashboard是私有的、特定于用户的页面，所以 SEO不相关，且不需要在服务器端预渲染（不知道用户信息，预渲染无意义）；数据更新频繁，需要请求时取数据。</p><p><img loading="lazy" src="https://nextjs.org/static/images/learn/data-fetching/client-side-rendering.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="swr">SWR<a href="#swr" class="hash-link" aria-label="Direct link to SWR" title="Direct link to SWR">​</a></h3><p>如果在客户端获取数据，可以使用Next.js团队出的SWR，这是一个React Hook，它处理缓存、重新验证、焦点跟踪、间隔重新获取等。</p><p>示例：</p><div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">useSWR</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'swr'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">Profile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> data</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> error </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useSWR</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/api/user'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fetch</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">failed to load</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">loading...</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">hello </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text">!</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>查看<a href="https://swr.vercel.app/" target="_blank" rel="noopener noreferrer">SWR 文档</a>以了解更多信息。</p>]]></content:encoded>
            <category>Front End</category>
        </item>
    </channel>
</rss>